# The manifest for the "api" service.
# Read the full specification for the "Load Balanced Web Service" type at:
#  https://aws.github.io/copilot-cli/docs/manifest/lb-web-service/

# Your service name will be used in naming your resources like log groups, ECS services, etc.
name: api
type: Load Balanced Web Service

# Distribute traffic to your service.
http:
  # Requests to this path will be forwarded to your service.
  # To match all requests you can use the "/" path.
  path: '/'
  # You can specify a custom health check path. The default is "/".
  # healthcheck: '/'

# Configuration for your containers and service.
image:
  location: ./Dockerfile
  # Port exposed through your container to route traffic to it.
  port: 3000

cpu: 256       # Number of CPU units for the task.
memory: 512    # Amount of memory in MiB used by the task.
count: 1       # Number of tasks that should be running in your service.
exec: true     # Enable running commands in your container.
network:
  connect: true # Enable Service Connect for intra-environment traffic between services.

# storage:
  # readonly_fs: true       # Limit to read-only access to mounted root filesystems.

# Optional fields for more advanced use-cases.

variables:                    # Pass environment variables as key value pairs.
  NODE_ENV: production
  PORT: 3000
  AWS_REGION: us-east-1
  LOG_LEVEL: info
  CORS_ORIGIN: "*"
  SERVICE_NAME: money-flow-api

secrets:                      # Pass secrets from AWS Systems Manager (SSM) Parameter Store.
  DATABASE_URL: /moneyflow/api/DATABASE_URL  # The key is the name of the environment variable, the value is the name of the SSM parameter.
  JWT_SECRET: /moneyflow/api/JWT_SECRET
  SESSION_SECRET: /moneyflow/api/SESSION_SECRET

# You can override any of the values defined above by environment.
environments:
  test:
    count: 1               # Number of tasks to run for the "test" environment.
    deployment:            # The deployment strategy for the "test" environment.
      rolling: 'recreate' # Stops existing tasks before new ones are started for faster deployments.
    variables:
      NODE_ENV: test
      LOG_LEVEL: debug
      CORS_ORIGIN: "*"
